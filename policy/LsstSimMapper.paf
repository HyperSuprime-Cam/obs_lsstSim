#<?cfg paf policy ?>

camera:		"../description/Full_STA_geom.paf"
defects:	"../description/defects"
filters:	"../description/LsstFilters.paf"

exposures: {
	raw: {
		template:	"raw/v%(visit)d-f%(filter)s/E%(snap)03d/R%(raft)s/S%(sensor)s/imsim_%(visit)d_R%(raft)s_S%(sensor)s_C%(channel)s_E%(snap)03d.fits.gz"
		python: 	"lsst.afw.image.DecoratedImageU"
		cpp: 		"DecoratedImageU"
		storage: 	"FitsStorage"
		level:		"Amp"
		tables:		raw raw_visit raw_skyTile
	}
	postISR: {
		template:	"postISR/v%(visit)d-f%(filter)s/s%(snap)d/R%(raft)s/S%(sensor)s/C%(channel)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Amp"
	}
	postISRCCD: {
		template:	"postISRCCD/v%(visit)d-f%(filter)s/s%(snap)d/R%(raft)s/S%(sensor)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Ccd"
	}
	sdqaAmp: {
		template:  	"sdqaAmp/v%(visit)d-f%(filter)s/s%(snap)d/R%(raft)s/S%(sensor)s/C%(channel)s.boost"
		python:		"lsst.sdqa.PersistableSdqaRatingVector"
		cpp:		"PersistableSdqaRatingVector"
		storage:	"BoostStorage"
		level:		"Amp"
	}
	sdqaCcd: {
		template:  	"sdqaCcd/v%(visit)d-f%(filter)s/s%(snap)d/R%(raft)s/S%(sensor)s.boost"
		python:		"lsst.sdqa.PersistableSdqaRatingVector"
		cpp:		"PersistableSdqaRatingVector"
		storage:	"BoostStorage"
		level:		"Ccd"
	}
	visitim: {
		template:  	"visitim/v%(visit)d-f%(filter)s/R%(raft)s/S%(sensor)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Ccd"
	}
	icSrc: {
		template:  	"icSrc/v%(visit)d-f%(filter)s/R%(raft)s/S%(sensor)s.boost"
		python:		"lsst.afw.detection.PersistableSourceVector"
		cpp:		"PersistableSourceVector"
		storage:	"BoostStorage"
		level:		"Ccd"
	}
	psf: {
		template:  	"psf/v%(visit)d-f%(filter)s/R%(raft)s/S%(sensor)s.boost"
		python:		"lsst.afw.detection.Psf"
		cpp:		"Psf"
		storage:	"BoostStorage"
		level:		"Ccd"
	}
	calexp: {
		template:  	"calexp/v%(visit)d-f%(filter)s/R%(raft)s/S%(sensor)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Ccd"
	}
	src: {
		template:  	"src/v%(visit)d-f%(filter)s/R%(raft)s/S%(sensor)s.boost"
		python:		"lsst.afw.detection.PersistableSourceVector"
		cpp:		"PersistableSourceVector"
		storage:	"BoostStorage"
		level:		"Ccd"
	}
	sourceHist: {
		template:  	"results/st%(skyTile)d/sourceHist.fits"
		python:		"lsst.afw.image.DecoratedImageU"
		cpp:		"DecoratedImageU"
		storage:	"FitsStorage"
		level:		"skyTile"
	}
	badSourceHist: {
		template:  	"results/st%(skyTile)d/badSourceHist.fits"
		python:		"lsst.afw.image.DecoratedImageU"
		cpp:		"DecoratedImageU"
		storage:	"FitsStorage"
		level:		"skyTile"
	}
	source: {
		template:  	"results/st%(skyTile)d/source.boost"
		python:		"lsst.afw.detection.PersistableSourceVector"
		cpp:		"PersistableSourceVector"
		storage:	"BoostStorage"
		level:		"skyTile"
	}
	badSource: {
		template:  	"results/st%(skyTile)d/badSource.boost"
		python:		"lsst.afw.detection.PersistableSourceVector"
		cpp:		"PersistableSourceVector"
		storage:	"BoostStorage"
		level:		"skyTile"
	}
	invalidSource: {
		template:  	"results/st%(skyTile)d/invalidSource.boost"
		python:		"lsst.afw.detection.PersistableSourceVector"
		cpp:		"PersistableSourceVector"
		storage:	"BoostStorage"
		level:		"skyTile"
	}
	object: {
		template:  	"results/st%(skyTile)d/object.boost"
		python:		"lsst.afw.detection.PersistableSourceClusterVector"
		cpp:		"PersistableSourceClusterVector"
		storage:	"BoostStorage"
		level:		"skyTile"
	}
	badObject: {
		template:  	"results/st%(skyTile)d/badObject.boost"
		python:		"lsst.afw.detection.PersistableSourceClusterVector"
		cpp:		"PersistableSourceClusterVector"
		storage:	"BoostStorage"
		level:		"skyTile"
	}
}

calibrations: {
	bias: {
		template:	"bias/v0/R%(raft)s/S%(sensor)s/imsim_0_R%(raft)s_S%(sensor)s_C%(channel)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Amp"
	}
	dark: {
		template:	"dark/v1/R%(raft)s/S%(sensor)s/imsim_1_R%(raft)s_S%(sensor)s_C%(channel)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Amp"
	}
	flat: {
		template:	"flat/v2-f%(filter)s/R%(raft)s/S%(sensor)s/imsim_2_R%(raft)s_S%(sensor)s_C%(channel)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Amp"
	}
	fringe: {
		template:	"fringe/v2-f%(filter)s/R%(raft)s/S%(sensor)s/imsim_2_R%(raft)s_S%(sensor)s_C%(channel)s.fits"
		python:		"lsst.afw.image.ExposureF"
		cpp:		"ExposureF"
		storage:	"FitsStorage"
		level:		"Amp"
	}
}
